<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oktfolio.tero.dao.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.oktfolio.tero.model.user.UserDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="credential_expired" jdbcType="BOOLEAN" property="credentialExpired"/>
        <result column="locked" jdbcType="BOOLEAN" property="locked"/>
        <result column="enabled" jdbcType="BOOLEAN" property="enabled"/>
        <result column="expired" jdbcType="BOOLEAN" property="expired"/>
        <result column="deleted" jdbcType="BOOLEAN" property="deleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, update_time, create_time, `uid`, username, nickname, phone, email, credential_expired,
        locked, enabled, expired, deleted
    </sql>
    <select id="selectByExample" parameterType="com.oktfolio.tero.model.user.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tero_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tero_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from tero_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.oktfolio.tero.model.user.UserExample">
        delete
        from tero_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.oktfolio.tero.model.user.UserDO"
            useGeneratedKeys="true">
        insert into tero_user (update_time, create_time, `uid`,
                               username, nickname, phone,
                               email, credential_expired, locked,
                               enabled, expired, deleted)
        values (#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{uid,jdbcType=VARCHAR},
                #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{credentialExpired,jdbcType=BOOLEAN}, #{locked,jdbcType=BOOLEAN},
                #{enabled,jdbcType=BOOLEAN}, #{expired,jdbcType=BOOLEAN}, #{deleted,jdbcType=BOOLEAN})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.oktfolio.tero.model.user.UserDO"
            useGeneratedKeys="true">
        insert into tero_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="uid != null and uid != ''">
                `uid`,
            </if>
            <if test="username != null and username != ''">
                username,
            </if>
            <if test="nickname != null and nickname != ''">
                nickname,
            </if>
            <if test="phone != null and phone != ''">
                phone,
            </if>
            <if test="email != null and email != ''">
                email,
            </if>
            <if test="credentialExpired != null">
                credential_expired,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="expired != null">
                expired,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null and uid != ''">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="username != null and username != ''">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null and nickname != ''">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phone != null and phone != ''">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null and email != ''">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="credentialExpired != null">
                #{credentialExpired,jdbcType=BOOLEAN},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=BOOLEAN},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BOOLEAN},
            </if>
            <if test="expired != null">
                #{expired,jdbcType=BOOLEAN},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.oktfolio.tero.model.user.UserExample" resultType="java.lang.Long">
        select count(*)
        from tero_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tero_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.uid != null">
                `uid` = #{record.uid,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.credentialExpired != null">
                credential_expired = #{record.credentialExpired,jdbcType=BOOLEAN},
            </if>
            <if test="record.locked != null">
                locked = #{record.locked,jdbcType=BOOLEAN},
            </if>
            <if test="record.enabled != null">
                enabled = #{record.enabled,jdbcType=BOOLEAN},
            </if>
            <if test="record.expired != null">
                expired = #{record.expired,jdbcType=BOOLEAN},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=BOOLEAN},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tero_user
        set id                 = #{record.id,jdbcType=BIGINT},
            update_time        = #{record.updateTime,jdbcType=TIMESTAMP},
            create_time        = #{record.createTime,jdbcType=TIMESTAMP},
            `uid`              = #{record.uid,jdbcType=VARCHAR},
            username           = #{record.username,jdbcType=VARCHAR},
            nickname           = #{record.nickname,jdbcType=VARCHAR},
            phone              = #{record.phone,jdbcType=VARCHAR},
            email              = #{record.email,jdbcType=VARCHAR},
            credential_expired = #{record.credentialExpired,jdbcType=BOOLEAN},
            locked             = #{record.locked,jdbcType=BOOLEAN},
            enabled            = #{record.enabled,jdbcType=BOOLEAN},
            expired            = #{record.expired,jdbcType=BOOLEAN},
            deleted            = #{record.deleted,jdbcType=BOOLEAN}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.oktfolio.tero.model.user.UserDO">
        update tero_user
        <set>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null and uid != ''">
                `uid` = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="username != null and username != ''">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null and nickname != ''">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null and email != ''">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="credentialExpired != null">
                credential_expired = #{credentialExpired,jdbcType=BOOLEAN},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=BOOLEAN},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BOOLEAN},
            </if>
            <if test="expired != null">
                expired = #{expired,jdbcType=BOOLEAN},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oktfolio.tero.model.user.UserDO">
        update tero_user
        set update_time        = #{updateTime,jdbcType=TIMESTAMP},
            create_time        = #{createTime,jdbcType=TIMESTAMP},
            `uid`              = #{uid,jdbcType=VARCHAR},
            username           = #{username,jdbcType=VARCHAR},
            nickname           = #{nickname,jdbcType=VARCHAR},
            phone              = #{phone,jdbcType=VARCHAR},
            email              = #{email,jdbcType=VARCHAR},
            credential_expired = #{credentialExpired,jdbcType=BOOLEAN},
            locked             = #{locked,jdbcType=BOOLEAN},
            enabled            = #{enabled,jdbcType=BOOLEAN},
            expired            = #{expired,jdbcType=BOOLEAN},
            deleted            = #{deleted,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        update tero_user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="`uid` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.uid,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="username = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.username,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="nickname = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.nickname,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="phone = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.phone,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="email = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.email,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="credential_expired = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.credentialExpired,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="locked = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.locked,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="enabled = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.enabled,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="expired = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.expired,jdbcType=BOOLEAN}
                </foreach>
            </trim>
            <trim prefix="deleted = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.deleted,jdbcType=BOOLEAN}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        insert into tero_user
                (update_time, create_time, `uid`, username, nickname, phone, email, credential_expired,
                 locked, enabled, expired, deleted)
                values
        <foreach collection="list" item="item" separator=",">
            (#{item.updateTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.uid,jdbcType=VARCHAR},
             #{item.username,jdbcType=VARCHAR}, #{item.nickname,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR},
             #{item.email,jdbcType=VARCHAR}, #{item.credentialExpired,jdbcType=BOOLEAN},
             #{item.locked,jdbcType=BOOLEAN},
             #{item.enabled,jdbcType=BOOLEAN}, #{item.expired,jdbcType=BOOLEAN}, #{item.deleted,jdbcType=BOOLEAN})
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.oktfolio.tero.model.user.UserDO"
            useGeneratedKeys="true">
        insert into tero_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            update_time,
            create_time,
            `uid`,
            username,
            nickname,
            phone,
            email,
            credential_expired,
            locked,
            enabled,
            expired,
            deleted,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{updateTime,jdbcType=TIMESTAMP},
            #{createTime,jdbcType=TIMESTAMP},
            #{uid,jdbcType=VARCHAR},
            #{username,jdbcType=VARCHAR},
            #{nickname,jdbcType=VARCHAR},
            #{phone,jdbcType=VARCHAR},
            #{email,jdbcType=VARCHAR},
            #{credentialExpired,jdbcType=BOOLEAN},
            #{locked,jdbcType=BOOLEAN},
            #{enabled,jdbcType=BOOLEAN},
            #{expired,jdbcType=BOOLEAN},
            #{deleted,jdbcType=BOOLEAN},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            update_time        = #{updateTime,jdbcType=TIMESTAMP},
            create_time        = #{createTime,jdbcType=TIMESTAMP},
            `uid`              = #{uid,jdbcType=VARCHAR},
            username           = #{username,jdbcType=VARCHAR},
            nickname           = #{nickname,jdbcType=VARCHAR},
            phone              = #{phone,jdbcType=VARCHAR},
            email              = #{email,jdbcType=VARCHAR},
            credential_expired = #{credentialExpired,jdbcType=BOOLEAN},
            locked             = #{locked,jdbcType=BOOLEAN},
            enabled            = #{enabled,jdbcType=BOOLEAN},
            expired            = #{expired,jdbcType=BOOLEAN},
            deleted            = #{deleted,jdbcType=BOOLEAN},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id"
            parameterType="com.oktfolio.tero.model.user.UserDO" useGeneratedKeys="true">
        insert into tero_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="uid != null">
                `uid`,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="credentialExpired != null">
                credential_expired,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="expired != null">
                expired,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="credentialExpired != null">
                #{credentialExpired,jdbcType=BOOLEAN},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=BOOLEAN},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BOOLEAN},
            </if>
            <if test="expired != null">
                #{expired,jdbcType=BOOLEAN},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BOOLEAN},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null">
                `uid` = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="credentialExpired != null">
                credential_expired = #{credentialExpired,jdbcType=BOOLEAN},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=BOOLEAN},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BOOLEAN},
            </if>
            <if test="expired != null">
                expired = #{expired,jdbcType=BOOLEAN},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
</mapper>